apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    openshift.io/scc: nvidia-dcgm-exporter
  labels:
    app: nvidia-dcgm-exporter
    component: status-exporter
  name: nvidia-dcgm-exporter

spec:
  selector:
    matchLabels:
      app: nvidia-dcgm-exporter
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nvidia-dcgm-exporter
    spec:
      containers:
        - image: "{{ .Values.statusExporter.image.repository }}:{{ .Values.statusExporter.image.tag }}"
          imagePullPolicy: "{{ .Values.statusExporter.image.pullPolicy }}"
          resources:
            {{- toYaml .Values.statusExporter.resources | nindent 12 }}
          name: nvidia-dcgm-exporter
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: TOPOLOGY_CM_NAME
              value: topology
            - name: TOPOLOGY_CM_NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: TOPOLOGY_MAX_EXPORT_INTERVAL
              value: "{{ .Values.statusExporter.topologyMaxExportInterval }}"
          ports:
            - containerPort: 9400
              name: http
          volumeMounts:
            - mountPath: /runai/proc
              name: runai-proc-directory
      nodeSelector:
        nvidia.com/gpu.deploy.dcgm-exporter: "true"
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: status-exporter
      serviceAccountName: status-exporter
      tolerations:
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Exists
      imagePullSecrets:
        - name: gcr-secret
      volumes:
        - name: runai-proc-directory
          hostPath:
            path: /var/lib/runai/proc
            type: DirectoryOrCreate
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
