apiVersion: apps/v1
kind: DaemonSet
metadata:
{{- if .Values.environment.openshift }}
  annotations:
    openshift.io/scc: hostmount-anyuid
{{- end }}
  labels:
    app: device-plugin
  name: device-plugin
spec:
  selector:
    matchLabels:
      app: device-plugin
      component: device-plugin
  template:
    metadata:
      annotations:
        checksum/initialTopology: {{ include (print $.Template.BasePath "/topology-cm.yml") . | sha256sum }}
      labels:
        app: device-plugin
        component: device-plugin
    spec:
      containers:
        - image: "{{ .Values.devicePlugin.image.repository }}:{{ .Values.devicePlugin.image.tag }}"
          imagePullPolicy: "{{ .Values.devicePlugin.image.pullPolicy }}"
          resources:
            {{- toYaml .Values.devicePlugin.resources | nindent 12 }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: TOPOLOGY_PATH
              value: /etc/config/topology.yml
          imagePullPolicy: Always
          name: nvidia-device-plugin-ctr
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /runai/bin
              name: runai-bin-directory
            - mountPath: /var/lib/kubelet/device-plugins
              name: device-plugin
            - mountPath: /etc/config/
              name: topology
      dnsPolicy: ClusterFirst
      nodeSelector:
        nvidia.com/gpu.deploy.device-plugin: "true"
      restartPolicy: Always
      serviceAccountName: nvidia-device-plugin
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Exists
      imagePullSecrets:
        - name: gcr-secret
      volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: ""
          name: device-plugin
        - configMap:
            name: topology
          name: topology
        - hostPath:
            path: /var/lib/runai/shared/bin
            type: DirectoryOrCreate
          name: runai-bin-directory