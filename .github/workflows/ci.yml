name: CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_REGISTRY: "ghcr.io/run-ai/fake-gpu-operator"

permissions:
  contents: read
  packages: write

jobs:
  # GuyDebug
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.22'
  #         cache: true
  #     - name: Cache lint cache
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.cache
  #         key: ${{ runner.os }}-lint-${{ hashFiles('**/*.go') }}
  #         restore-keys: |
  #           ${{ runner.os }}-lint-
  #     - name: Run lint
  #       run: make lint

  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.22'
  #         cache: true
  #     - name: Run tests
  #       run: make test

  set-release-vars:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.version }}
    steps:
      - name: Set release variables
        id: vars
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Version tag
            echo "version=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          else
            # Push to main
            echo "version=0.0.0-$GITHUB_SHA" >> $GITHUB_OUTPUT
          fi


  release-docker:
    runs-on: ubuntu-latest
    # GuyDebug
    # needs: [set-release-vars, lint, test]
    needs: [set-release-vars]
    strategy:
      matrix:
        component: [device-plugin, status-updater, kwok-gpu-device-plugin, status-exporter, topology-server, mig-faker, jupyter-notebook]
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push docker image
        run: make image SHOULD_PUSH=true DOCKER_REPO_BASE=${{ env.DOCKER_REGISTRY }} DOCKER_TAG=${{ needs.set-release-vars.outputs.version }} COMPONENTS=${{ matrix.component }}

  release-helm:
    runs-on: ubuntu-latest
    needs: [release-docker, set-release-vars]
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          sed -i 's/repository: runai.jfrog.io\/fake-gpu-operator-containers-prod/repository: ${{ secrets.ARTIFACTORY_ENDPOINT }}\/${{ env.DOCKER_REGISTRY }}/' deploy/fake-gpu-operator/values.yaml
          helm package deploy/fake-gpu-operator -d ./charts --version ${{ needs.set-release-vars.outputs.version }} --app-version ${{ needs.set-release-vars.outputs.version }}
      - name: Push
        run: |
          helm push ./charts/fake-gpu-operator-${{ needs.set-release-vars.outputs.version }}.tgz oci://${{ env.DOCKER_REGISTRY }}

